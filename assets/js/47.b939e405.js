(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{352:function(e,t,r){"use strict";r.r(t);var n=r(1),s=Object(n.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),r("p",[e._v("HTTP协议虽然好用，但在安全方面有以下不足：")]),e._v(" "),e._m(1),e._v(" "),r("p",[e._v("为防止内容被窃听，所以需要对信息加密。也就是在http中加入一个SSL/TSL层，来加密信息。\n有两种加密方式：")]),e._v(" "),r("p",[e._v("针对通信的加密\n针对内容的加密")]),e._v(" "),r("p",[e._v("概要：")]),e._v(" "),e._m(2),e._v(" "),r("p",[e._v("SSL双向认证具体过程：")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),r("p",[e._v("制作根证书")]),e._v(" "),e._m(5),e._v(" "),r("p",[e._v("制作服务端证书")]),e._v(" "),e._m(6),e._v(" "),r("p",[e._v("生成无密码的服务端私钥:server.key\nopenssl rsa -in server.pem -out server.key")]),e._v(" "),e._m(7),e._v(" "),r("p",[e._v("把ca.crt的内容追加到server.crt后面，因为有些浏览似乎不支持\ncat ca.crt >> server.crt")]),e._v(" "),r("p",[e._v("制作客户端证书（跟制作服务端证书步骤一样）")]),e._v(" "),e._m(8),e._v(" "),r("p",[e._v("客户端证书CRT转换为PKCS      #12格式(全称应该叫做 Personal Information Exchange，通常以 p12作为后缀)\nopenssl pkcs12 -export -clcerts -in client.crt -inkey client.pem -out chenbo.p12")]),e._v(" "),e._m(9),e._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"https://blog.csdn.net/u013967628/article/details/87367681",target:"_blank",rel:"noopener noreferrer"}},[e._v("CA证书 - 森林屿麓 CSDN"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.zhihu.com/question/34074946",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP/2.0 相比1.0有哪些重大改进？ - Leo Zhang 知乎"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/chen55bo/article/details/78872555",target:"_blank",rel:"noopener noreferrer"}},[e._v("openssl双向认证 （自签发证书实例）- chen55bo CSDN"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000014031696",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 HTTP2 做开发服务器 (上) - LLeo小浩 Segmentfault"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000013184607",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端系列——nodejs环境下http2初尝试 - 二月 Segmentfault"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/43789231",target:"_blank",rel:"noopener noreferrer"}},[e._v("彻底搞懂HTTPS的加密机制 - Ivan YGY 知乎"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5caab0bff265da24cf311d5b",target:"_blank",rel:"noopener noreferrer"}},[e._v("一篇文章读懂HTTPS及其背后的加密原理 - HollisChuanglv 掘金"),r("OutboundLink")],1)])])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"https"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https","aria-hidden":"true"}},[this._v("#")]),this._v(" HTTPS")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("通信使用明文，容易遭到"),t("strong",[this._v("中间人攻击")]),this._v("。")]),this._v(" "),t("li",[this._v("不验证通信方的身份，有可能遭遇伪装。")]),this._v(" "),t("li",[this._v("无法证明报文的完整性，有可能遭到篡改。")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ol",[r("li",[e._v("https比http多一个SSL/TLS层。")]),e._v(" "),r("li",[e._v("什么是SSL：SSL（security sockets layer，安全套接层）是为网络通信提供安全及数据完整性的一种安全协议，它位于TCP层与Application层之间。提供对Application数据的加密保护（密文），完整性保护（不被篡改）等安全服务，它缺省工作在TCP 443 端口，一般对HTTP加密，即俗称的HTTPS。")]),e._v(" "),r("li",[e._v("SSL与TSL有什么关系：SSL3.0版本以后又被称为TLS。")]),e._v(" "),r("li",[e._v("SSL位于TCP与各应用层之间，是操作系统向外提供的API。")]),e._v(" "),r("li",[e._v("SSL如何保证网络通信的安全和数据的完整性呢？就是采用了两种手段：身份认证和数据加密。首先身份认证就需要用到CA证书了。")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ol",[r("li",[e._v("浏览器发送一个连接请求给安全服务器。")]),e._v(" "),r("li",[e._v("服务器将自己的证书，以及同证书相关的信息发送给客户浏览器。")]),e._v(" "),r("li",[e._v("客户浏览器检查服务器送过来的证书是否是由自己信赖的CA中心（如沃通CA）所签发的。如果是，就继续执行协议;如果不是，客户浏览器就给客户一个警告消息：警告客户这个证书不是可以信赖的，询问客户是否需要继续。")]),e._v(" "),r("li",[e._v("接着客户浏览器比较证书里的消息，例如域名和公钥，与服务器刚刚发送的相关消息是否一致，如果是一致的，客户浏览器认可这个服务器的合法身份。")]),e._v(" "),r("li",[e._v("服务器要求客户发送客户自己的证书。收到后，服务器验证客户的证书，如果没有通过验证，拒绝连接;如果通过验证，服务器获得用户的公钥。")]),e._v(" "),r("li",[e._v("客户浏览器告诉服务器自己所能够支持的通讯对称密码方案。")]),e._v(" "),r("li",[e._v("服务器从客户发送过来的密码方案中，选择一种加密程度最高的密码方案，用客户的公钥加过密后通知浏览器。")]),e._v(" "),r("li",[e._v("浏览器针对这个密码方案，选择一个通话密钥，接着用服务器的公钥加过密后发送给服务器。")]),e._v(" "),r("li",[e._v("服务器接收到浏览器送过来的消息，用自己的私钥解密，获得通话密钥。")]),e._v(" "),r("li",[e._v("服务器、浏览器接下来的通讯都是用对称密码方案，对称密钥是加过密的。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"自签发证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自签发证书","aria-hidden":"true"}},[this._v("#")]),this._v(" 自签发证书")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[t("p",[this._v("生成CA私钥:ca.key （这个是信任的起点,根证书,所有其他的证书都要经过CA的私钥签名）\nopenssl genrsa -des3 -out ca.key 2048")])]),this._v(" "),t("li",[t("p",[this._v("生成 CA根证书的公钥:ca.crt\nopenssl req -new -x509 -days 3650 -key ca.key -out ca.crt")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[this._v("生成证服务端书私钥:server.pem\nopenssl genrsa -des3 -out server.pem 1024")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",{attrs:{start:"2"}},[t("li",[t("p",[this._v("生成服务端签发请求:server.csr\nopenssl req -new -key server.pem -out server.csr")])]),this._v(" "),t("li",[t("p",[this._v("最后用CA证书给服务端证书进行签名\nopenssl x509 -req -sha256 -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -days 3650 -out server.crt")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[t("p",[this._v("生成客户端证书私钥\nopenssl genrsa -des3 -out client.pem 2048")])]),this._v(" "),t("li",[t("p",[this._v("生成客户端证书签发请求\nopenssl req -new -key client.pem -out client-req.csr")])]),this._v(" "),t("li",[t("p",[this._v("用CA证书给客户端证书进行签名\nopenssl x509 -req -sha256 -in client-req.csr -CA ca.crt -CAkey ca.key -CAcreateserial -days 3650 -out client.crt")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"reference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reference","aria-hidden":"true"}},[this._v("#")]),this._v(" Reference")])}],!1,null,null,null);t.default=s.exports}}]);